{"version":3,"sources":["../../../src/routes/api/users.js"],"names":["mongoose","require","router","Router","passport","User","model","get","req","res","next","findById","payload","id","then","user","sendStatus","json","toAuthJSON","catch","put","body","username","email","bio","image","password","setPassword","save","post","status","errors","authenticate","session","err","info","module","exports"],"mappings":"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","file":"users.js","sourcesContent":["const mongoose = require(\"mongoose\");\nconst router = require(\"express\").Router();\nconst passport = require(\"passport\");\nconst User = mongoose.model(\"User\");\n\nrouter.get(\"/user\", function(req, res, next) {\n    User.findById(req.payload.id)\n        .then(function(user) {\n            if (!user) {\n                return res.sendStatus(401);\n            }\n            return res.json({ user: user.toAuthJSON() });\n        })\n        .catch(next);\n});\n\nrouter.put(\"/user\", function(req, res, next) {\n    User.findById(req.payload.id)\n        .then(function(user) {\n            if (!user) {\n                return res.sendStatus(401);\n            }\n\n            // only update fields that were actually passed...\n            if (typeof req.body.user.username !== \"undefined\") {\n                user.username = req.body.user.username;\n            }\n            if (typeof req.body.user.email !== \"undefined\") {\n                user.email = req.body.user.email;\n            }\n            if (typeof req.body.user.bio !== \"undefined\") {\n                user.bio = req.body.user.bio;\n            }\n            if (typeof req.body.user.image !== \"undefined\") {\n                user.image = req.body.user.image;\n            }\n            if (typeof req.body.user.password !== \"undefined\") {\n                user.setPassword(req.body.user.password);\n            }\n\n            return user.save().then(function() {\n                return res.json({ user: user.toAuthJSON() });\n            });\n        })\n        .catch(next);\n});\n\nrouter.post(\"/users/login\", function(req, res, next) {\n    if (!req.body.user.email) {\n        return res.status(422).json({ errors: { email: \"can't be blank\" } });\n    }\n\n    if (!req.body.user.password) {\n        return res.status(422).json({ errors: { password: \"can't be blank\" } });\n    }\n    passport.authenticate(\"local\", { session: false }, function(\n        err,\n        user,\n        info\n    ) {\n        if (err) {\n            return next(err);\n        }\n\n        if (user) {\n            return res.json({ user: user.toAuthJSON() });\n        } else {\n            return res.status(422).json(info);\n        }\n    })(req, res, next);\n});\n\nrouter.post(\"/users\", function(req, res, next) {\n    const user = new User();\n\n    user.username = req.body.user.username;\n    user.email = req.body.user.email;\n    user.setPassword(req.body.user.password);\n\n    user.save()\n        .then(function() {\n            return res.json({ user: user.toAuthJSON() });\n        })\n        .catch(next);\n});\n\nmodule.exports = router;\n"]}