{
  "openapi": "3.0.1",
  "info": {
    "title": "Barefoot Nomad API",
    "description": "Barefoot Nomad makes company global travel and accommodation easy and convenient for the strong workforce of savvy members of staff, by leveraging the modern web.",
    "contact": {
      "email": "team-banshee@barefoot-nomad.com"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "The Github Repository",
    "url": "https://github.com/andela/banshee-bn-backend"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Welcome"
    },
    {
      "name": "auth",
      "description": "Operations related to Users authentication"
    },
    {
      "name": "Profile",
      "description": "Operations related to Users profile"
    },
    {
      "name": "Feedback",
      "description": "Operations related to Feedbacks"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Welcome"
        ],
        "summary": "The root endpoint",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/auth/register/user": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Signup a user",
        "operationId": "createUser",
        "requestBody": {
          "description": "Create a new user",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Registration was successfull"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Company code not found"
          },
          "409": {
            "description": "Email already exists"
          },
          "500": {
            "description": "Server error, please try again later"
          }
        }
      }
    },
    "/auth/register/company": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Signup a company",
        "operationId": "createCompany",
        "requestBody": {
          "description": "Create a new user and company",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Registration was successfull"
          },
          "500": {
            "description": "Server error, please try again later"
          }
        }
      }
    },
    "/auth/verify": {
      "patch": {
        "tags": [
          "auth"
        ],
        "summary": "User signup verification",
        "operationId": "verifyUser",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "description": "verification token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Account verification was successful"
          },
          "403": {
            "description": "User account has already been verified"
          },
          "500": {
            "description": "Server error, please try again later"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "User login",
        "operationId": "login",
        "requestBody": {
          "description": "login user object",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "user successfully login",
            "content": {
              "application/json": {
                "schema": {
                  "title": "user login",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "user logged in sucessfully"
                    },
                    "data": {
                      "type": "object",
                      "example": "{ token: '8992hhsbstwtw'}"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "title": "user login",
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "incorrect email or password or company code"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot_password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Forgot password route",
        "description": "Sends email with reset token upon success",
        "requestBody": {
          "description": "User email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset mail sent"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Email does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset_password/{resetToken}": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset password route",
        "description": "Resets user password on success",
        "parameters": [
          {
            "name": "resetToken",
            "in": "path",
            "description": "The reset token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User Credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "new-password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "new-password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password reset successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Expired reset link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Expired reset link"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trips": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Travel Requests"
        ],
        "summary": "Travel request",
        "description": "Creates travel request",
        "parameters": [],
        "requestBody": {
          "description": "Travel request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "oneway"
                  },
                  "from": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "departureDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Official purpose"
                  },
                  "destination": {
                    "type": "object",
                    "properties": {
                      "to": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "accomodation": {
                        "type": "string",
                        "format": "uuid"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "code": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Travel request successfully created"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "trip": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "type": {
                              "type": "string",
                              "example": "oneway"
                            },
                            "userId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "startBranchId": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "reason": {
                              "type": "string",
                              "example": "Official purpose"
                            },
                            "tripDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "status": {
                              "type": "string",
                              "example": "pending"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "stop": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "destinationBranchId": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "accomodationId": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "tripId": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "updatedAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "code": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation Error!"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Retrieve user profile",
        "operationId": "getUserProfile",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "description": "user signup token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "User Profile retrieved successfuly"
          },
          "401": {
            "description": "Unathorized, You did not provide a token"
          },
          "500": {
            "description": "Server error, please try again later"
          }
        }
      },
      "patch": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Profile"
        ],
        "summary": "Update user profile",
        "operationId": "patchUserProfile",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "description": "user signup token",
            "required": true
          }
        ],
        "requestBody": {
          "description": "user object",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User Profile updated successfuly"
          },
          "401": {
            "description": "Unathorized, You did not provide a token"
          },
          "500": {
            "description": "Server error, please try again later"
          }
        }
      }
    },
    "/accomodation/feedback": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "tags": [
          "Feedback"
        ],
        "summary": "Post a feedback for accomodation",
        "operationId": "postAccomodationFeedback",
        "parameters": [
          {
            "in": "query",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "description": "user signup token",
            "required": true
          }
        ],
        "requestBody": {
          "description": "user object",
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/accomodationFeedback"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/accomodationFeedback"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Accomodation feedback posted successfuly"
          },
          "401": {
            "description": "Unathorized, You did not provide a token"
          },
          "500": {
            "description": "Server error, please try again later"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "companyCode": {
            "type": "string"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Company"
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "xml": {
          "name": "login"
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "dob": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "address": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Profile"
        }
      },
      "accomodationFeedback": {
        "type": "object",
        "properties": {
          "reviews": {
            "type": "string"
          },
          "likeDislike": {
            "type": "string"
          },
          "accomodationId": {
            "type": "string",
            "format": "uuid"
          },
          "tripId": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      }
    }
  }
}